name: Speaker-kafka

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/speaker-kafka.yml'
      - 'deploy/kafka-dev.yml'
      - 'deploy/kafka-prod.yml'
      - 'deploy/db-policy-dev.yml'
      - 'deploy/db-policy-prod.yml'
      - 'speaker-kafka/**'
      - 'speaker-database/**'
      - 'build.gradle.kts'
      - 'Dockerfile-kafka'
    branches:
      - main

jobs:
  set_version:
    name: set image name
    runs-on: ubuntu-latest
    steps:
      - name: create docker tag
        run: echo "TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
    outputs:
      image: ghcr.io/${{ github.repository }}/speaker-kafka:${{ env.TAG }}

  build:
    name: build docker image
    runs-on: ubuntu-latest
    needs: set_version
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21.x'
          cache: 'gradle'
      - name: test and build
        run: ./gradlew :speaker-kafka:test :speaker-kafka:build
      - name: build docker image
        run: docker build -f Dockerfile-kafka . --pull -t ${{ needs.set_version.outputs.image }}
      - name: push docker image
        run: |
          docker login ghcr.io --username "$GITHUB_REPOSITORY" -p ${{ secrets.GITHUB_TOKEN }}
          docker push ${{ needs.set_version.outputs.image }}

#  deployDev:
#    name: deploy to dev
#    needs: [set_version, build]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: nais/deploy/actions/deploy@v2
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-gcp
#          RESOURCE: deploy/kafka-dev.yml,deploy/db-policy-dev.yml
#          IMAGE: ${{ needs.set_version.outputs.image }}
#
#  deployProd:
#    name: deploy to prod
#    needs: [set_version, deployDev]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: nais/deploy/actions/deploy@v2
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: deploy/kafka-prod.yml,deploy/db-policy-prod.yml
#          IMAGE: ${{ needs.set_version.outputs.image }}
